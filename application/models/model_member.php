<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Model_member extends CI_Controller{	function __Construct(){		parent::__Construct();		$this->load->database();	}		function CreateID(){		$new_id = '';		$last_id = '';		$this->db->select_max('id','id');		$query = $this->db->get('member');		if($query->num_rows()>0){			foreach($query->result() as $row){				$last_id =  $row->id;			}		}				$this_year = date("Y"); // Tahun Sekarang		$id_year = substr($last_id,3,4); // Tahun pada ID		$last_index = substr($last_id,7,4); // Cari Index terakhir '0001'						if($last_id==null){			$new_id = $this_year.'0001';		}		else {			if($last_index>=1000){				$new_id = $this_year.''.($last_index+1);			}else{				$zero = 0;				$count_index = strlen($last_index); // Hitung jumlah karakter '00001'				for($i=0;$i<$count_index;$i++){					if(substr($last_index,$i,1)=="0"){						$zero++;  // Hitung jumlah nol					}				}				$current_index = substr($last_index,$zero); // index current '1'				if($current_index==9||$current_index==99||$current_index==999||$current_index==9999){					$zero = $zero -1;				}								if($this_year>$id_year){					$new_id = $this_year.'0001';				}else {					$new_id = $this_year.''.substr($last_index,0,$zero)."".($current_index+1);				}			}		}		return $new_id;	}		function CountData(){		 return $this->db->count_all('member');	}		function ReadData($limit, $start) {        $this->db->limit($limit, $start);		$this->db->order_by("id", "asc");        $query = $this->db->get('member');        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $data[] = $row;            }            return $data;        }        return false;   }      function Save($data){		$this->db->insert('member',$data);   }      function Edit($id){		$data = array();		$this->db->where('id',$id);		$query = $this->db->get('member');		if($query->num_rows()>0){			foreach($query->result_array() as $row){				$data[] = $row;			}		}		$query->free_result();		return $data;	}   	function Update($data,$id){		$this->db->where('id',$id);		$this->db->update('member',$data);	}   	function Delete($id){		$this->db->where('id',$id);			$this->db->delete('member');		$data = $this->CountData();		if($data==0){			$this->db->query('TRUNCATE member');		}	}		function ListPencarian(){		$data = array();		$query = $this->db->query("DESC member");		if($query->num_rows()>0){			foreach($query->result_array() as $row){				$data[] = $row;			}		}		$query->free_result();		return $data;	}		function SearchData($limit, $start,$kategori,$value) {        $this->db->limit($limit, $start);		$this->db->like($kategori, $value);        $query = $this->db->get('member');        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $data[] = $row;            }            return $data;        }        return false;   }	}