<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Model_pegawai extends CI_Controller{	function __Construct(){		parent::__Construct();		$this->load->database();	}		function CreateID($posisi,$inisial){		$new_no_pegawai = '';		$last_no_pegawai = '';		$this->db->where('posisi',$posisi);		$this->db->select_max('no_pegawai','no_pegawai');		$query = $this->db->get('pegawai');		if($query->num_rows()>0){			foreach($query->result() as $row){				$last_no_pegawai =  $row->no_pegawai;			}		}				$this_year = substr(date("Y"),2); // Tahun Sekarang		$no_pegawai_year = substr($last_no_pegawai,3,2); // Tahun pada no_pegawai		$last_index = substr($last_no_pegawai,7,9); // Cari Index terakhir '0001' CSG2014						if($last_no_pegawai==null){			$new_no_pegawai = $this_year.''.$inisial.'001';		}		else {			if($last_index>=1000){				$new_no_pegawai = $this_year.''.($last_index+1);			}else{				$zero = 0;				$count_index = strlen($last_index); // Hitung jumlah karakter '00001'				for($i=0;$i<$count_index;$i++){					if(substr($last_index,$i,1)=="0"){						$zero++;  // Hitung jumlah nol					}				}				$current_index = substr($last_index,$zero); // index current '1'				if($current_index==9||$current_index==99||$current_index==999||$current_index==9999){					$zero = $zero -1;				}								if($this_year>$no_pegawai_year){					$new_no_pegawai = $this_year.''.$inisial.'001';				}else {					$new_no_pegawai = $this_year.''.$inisial.''.substr($last_index,0,$zero)."".($current_index+1);				}			}		}		return $new_no_pegawai;	}		function CountData(){		 return $this->db->count_all('pegawai');	}		function ReadData($limit, $start) {        $this->db->limit($limit, $start);		$this->db->order_by("no_pegawai", "asc");        $query = $this->db->get('pegawai');        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $data[] = $row;            }            return $data;        }        return false;   }      function Save($data){		$this->db->insert('pegawai',$data);   }      function Edit($no_pegawai){		$data = array();		$this->db->where('no_pegawai',$no_pegawai);		$query = $this->db->get('pegawai');		if($query->num_rows()>0){			foreach($query->result_array() as $row){				$data[] = $row;			}		}		$query->free_result();		return $data;	}   	function Update($data,$no_pegawai){		$this->db->where('no_pegawai',$no_pegawai);		$this->db->update('pegawai',$data);	}   	function Delete($no_pegawai){		$this->db->where('no_pegawai',$no_pegawai);			$this->db->delete('pegawai');	}		function ListPencarian(){		$data = array();		$query = $this->db->query("DESC pegawai");		if($query->num_rows()>0){			foreach($query->result_array() as $row){				$data[] = $row;			}		}		$query->free_result();		return $data;	}		function SearchData($limit, $start,$kategori,$value) {        $this->db->limit($limit, $start);		$this->db->like($kategori, $value);        $query = $this->db->get('pegawai');        if ($query->num_rows() > 0) {            foreach ($query->result() as $row) {                $data[] = $row;            }            return $data;        }        return false;   }      function Posisi(){		$data = array();		$query = $this->db->query("SELECT * FROM posisi ORDER BY nama ASC");		if($query->num_rows()>0){			foreach($query->result_array() as $row){				$data[] = $row;			}		}		$query->free_result();		return $data;	}		function NoPosisi($nama){		$this->db->select('no_posisi');		$this->db->where('nama',$nama);		$query = $this->db->get('posisi');		if($query->num_rows()>0){			foreach($query->result() as $row){				return $row->no_posisi;			}		}	}	}